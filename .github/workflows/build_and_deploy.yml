# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  push:
    branches: [ '*' ]
    tags: [ "v*" ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Test the add-on
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.sys.os }}
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        # NOTE: When adding a new blender version also add the corresponding
        # python version below.
        sys:
        - { os: ubuntu-latest, os_tag: Linux }
        - { os: windows-latest, os_tag: Windows }
        blender-version: [ 2.92, 2.93 ]
        include:
        - blender-version: 2.92
          sys.os: windows-latest
          python-version: 37/bin/python
        - blender-version: 2.93
          sys.os: windows-latest
          python-version: 39/bin/python
        - blender-version: 2.92
          sys.os: ubuntu-latest
          python-version: bin/python3.7m
        - blender-version: 2.93
          sys.os: ubuntu-latest
          python-version: bin/python3.9
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Show what's there
      - uses: msys2/setup-msys2@v2
        if: startsWith(matrix.sys.os, 'windows')
        with:
          release: false
          install: |
            rsync
            zip
      - name: switch git-bash shell to msys2 shell by adding msys2 path to PATH front
        if: startsWith(matrix.sys.os, 'windows')
        run: echo "C:\msys64\usr\bin" >> $GITHUB_PATH
        shell: bash
      - name: show data
        shell: bash
        env:
          OUTFILE: out-${{ matrix.sys.os_tag }}-${{ matrix.blender-version }}.txt
        run: |
          echo "blender version: ${{ matrix.blender-version }}" > $OUTFILE
          echo "os: ${{ matrix.sys.os }}" >> $OUTFILE
          echo "python: ${{ matrix.python-version }}" >> $OUTFILE
          echo "os_tag: ${{ matrix.sys.os_tag }}" >> $OUTFILE
          echo "${{ github.ref }}" >> $OUTFILE
          cat >> $OUTFILE
          rsync --help
          zip --help
      # Pull requests and non-main branches store artifacts
      - name: Archive production artifacts
        id: upload_artifact
        uses: actions/upload-artifact@v2
        with:
          name: out-${{ matrix.sys.os_tag }}-${{ matrix.blender-version }}.txt
          path: out-${{ matrix.sys.os_tag }}-${{ matrix.blender-version }}.txt
  # Test the add-on
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
      - name: show artifacts
        shell: bash
        run: |
          ls -l
          cat out-Linux-2.92.txt
